/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package ifes.edu.br.poo2.xadrez.cgd;

import ifes.edu.br.poo2.xadrez.cdp.jogador.Jogador;
import ifes.edu.br.poo2.xadrez.cdp.jogador.JogadorHumano;
import ifes.edu.br.poo2.xadrez.cdp.peca.EnumCor;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;

/**
 *
 * @author Bassini
 */
public class JogadorDAO extends DAOGeneric implements DAO<Jogador> {

    public void criarTabela() throws ClassNotFoundException, SQLException
    {
            this.openConnection();

            //this.execute("DROP TABLE IF EXISTS PLAYER;");

            String sql =    "CREATE TABLE IF NOT EXISTS PLAYER " +
                            " (ID INTEGER GENERATED BY DEFAULT AS IDENTITY "+
                            " (START WITH 1, INCREMENT BY 1) NOT NULL," +
                            " NOME varchar(255) NOT NULL UNIQUE," +
                            " VITORIAS INTEGER NOT NULL,"+
                            " PRIMARY KEY (ID))";

            this.execute(sql);

            this.closeConnection();
    }
    
    public Jogador create() {
            return new JogadorHumano(EnumCor.BRANCO);
    }
    
    public void insert(Jogador obj) throws SQLException, ClassNotFoundException {
		
		this.openConnection();
                
		String sql  = "INSERT INTO PLAYER (NOME, VITORIAS)"
                            + " VALUES ('"+obj.getNome()+"',"+obj.getVitorias()+")"; 
		
		int id = this.executeUpdate(sql);
		obj.setId(id);
		
		this.closeConnection();
		
	}
        
        public void update(Jogador obj) throws SQLException, ClassNotFoundException {
            
            this.openConnection();
            
            String sql = "UPDATE PLAYER SET VITORIAS=(VITORIAS+1) WHERE NOME='"+obj.getNome()+"'";
            
            int id = this.executeUpdate(sql);
		
            this.closeConnection();
            
            
	}

        

        public void delete(Jogador obj) throws SQLException, ClassNotFoundException {
            this.openConnection();
            
            String sql = "DELETE FROM PLAYER WHERE NOME='"+obj.getNome()+"'";
            
            int id = this.executeUpdate(sql);
		
            this.closeConnection();
        }

        public Jogador findbyID(Long id) throws SQLException, ClassNotFoundException {
            this.openConnection();
		
            String sql = "SELECT * FROM PLAYER WHERE ID ="+id;
		
            ResultSet rs = this.executeQuery(sql);
            
            Jogador jogador = null;
            if(rs.first()){
                jogador = new JogadorHumano(EnumCor.PRETO);
                jogador.setNome(rs.getString("NOME"));
                jogador.setId(rs.getLong("ID"));
                jogador.setVitorias(rs.getInt("VITORIAS"));
            }
            return jogador;
            
        }
        
        public Jogador findbyNome(String nome) throws SQLException, ClassNotFoundException {
            this.openConnection();
            
            String sql = "SELECT * FROM PLAYER WHERE NOME ='"+nome+"'";
		
            
            ResultSet rs = this.executeQuery(sql);
            
            Jogador jogador = null;
            if(rs!= null && rs.next()){
                jogador = new JogadorHumano(EnumCor.BRANCO);
                jogador.setNome(rs.getString("NOME"));
                jogador.setId(rs.getLong("ID"));
                jogador.setVitorias(rs.getInt("VITORIAS"));
            }
            return jogador;
            
        }

        public List<Jogador> findAll() throws SQLException, ClassNotFoundException {
            
            this.openConnection();
		
		String sql = "SELECT * FROM PLAYER";
		
                
                List<Jogador> lista = new ArrayList<Jogador>();
		
		
		ResultSet rs = this.executeQuery(sql);
		
		while (rs.next())
		{   
                        Jogador jogador = new JogadorHumano(EnumCor.PRETO);
			jogador.setId(rs.getInt("ID"));
                        
                        jogador.setNome(rs.getString("NOME"));
                        jogador.setVitorias(rs.getInt("VITORIAS"));
                        
                        lista.add(jogador);
		}
		
		
		this.closeConnection();
		
		return lista;
        }
    
}
