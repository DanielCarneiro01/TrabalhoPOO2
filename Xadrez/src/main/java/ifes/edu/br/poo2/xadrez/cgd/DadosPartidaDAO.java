package ifes.edu.br.poo2.xadrez.cgd;


import ifes.edu.br.poo2.xadrez.cdp.jogador.Jogador;
import ifes.edu.br.poo2.xadrez.cdp.jogador.JogadorHumano;
import ifes.edu.br.poo2.xadrez.cdp.jogador.Score;
import ifes.edu.br.poo2.xadrez.cdp.partida.Partida;
import ifes.edu.br.poo2.xadrez.cdp.peca.EnumCor;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;



public class DadosPartidaDAO extends DAOGeneric implements DAO<Partida> {

	public Partida create() {
		
		return new Partida();
	}
	//CRIANDO A TABELA USUARIO
	public void criarTabela() throws ClassNotFoundException, SQLException
	{
		this.openConnection();
		
                //this.execute("DROP TABLE IF EXISTS DADOSPARTIDA;");
                
		String sql =    " CREATE TABLE  IF NOT EXISTS DADOSPARTIDA " +
                        	" (ID INTEGER GENERATED BY DEFAULT AS IDENTITY "+
                                " (START WITH 1, INCREMENT BY 1) NOT NULL," +
				" INICIO VARCHAR(255) NOT NULL," +
				" FIM VARCHAR(255) NOT NULL," +
				" WINNER VARCHAR(255) NOT NULL," +
				" PRIMARY KEY (ID))";
		
		this.execute(sql);
		
		this.closeConnection();
	}

	public void insert(Partida obj) throws SQLException, ClassNotFoundException {
		
		this.openConnection();
                
                String winner, inicio, fim;
                
                winner = obj.getWinner().getNome();
                inicio = obj.getInicio();
                fim = obj.getFim();
                
                
		String sql  = "INSERT INTO DADOSPARTIDA (INICIO, FIM, WINNER)"
                            + " VALUES ('"+inicio+"', '"+fim
                            + "', '"+winner+"' );"; 
		
		int id = this.executeUpdate(sql);
		
		//obj.setId(id);
		
		this.closeConnection();
		
	}

	public void update(Partida obj) throws SQLException, ClassNotFoundException {
            
	}

	public void delete(Partida obj) throws SQLException, ClassNotFoundException {
		this.openConnection();
		
		String sql = "DELETE FROM DADOSPARTIDA WHERE ID="+obj.getId()+""; 
		
		int id = this.executeUpdate(sql);
		
		obj.setId(id);
		
		this.closeConnection();
		
	}

	public Partida findbyID(Long id) throws ClassNotFoundException, SQLException {
		//Query para buscar o usuario
		this.openConnection();
		
		String sql = "SELECT * FROM DADOSPARTIDA WHERE ID ="+id;
		
		Partida partida = new Partida();
		
		ResultSet rs = this.executeQuery(sql);
		
		if (rs.next())
		{
			partida.setId(rs.getInt("ID"));
                        partida.setInicio(rs.getString("INICIO"));
                        partida.setFim(rs.getString("FIM"));
                        Jogador winner;
                        
                        winner = new JogadorHumano(EnumCor.BRANCO);
                        
			winner.setNome(rs.getString("WINNER"));
			
                        partida.setWinner(winner);
		}else{
                    partida = null;
                }
		
		
		this.closeConnection();
		
		return partida;
	}
	public List<Partida> findAll() throws SQLException, ClassNotFoundException {
            
            this.openConnection();
		
		String sql = "SELECT * FROM DADOSPARTIDA";
		
                
                List<Partida> lista = new ArrayList<Partida>();
		
		
		ResultSet rs = this.executeQuery(sql);
		
		while (rs.next())
		{   
                        Partida partida = new Partida();
			partida.setId(rs.getInt("ID"));
                        
                        partida.setInicio(rs.getString("INICIO"));
			partida.setFim(rs.getString("FIM"));
			
                        String nomeWinner = rs.getString("WINNER");
                        
                        Jogador winner = new JogadorHumano(EnumCor.BRANCO);
                        
                        
                        
                        winner.setNome(nomeWinner);
                        partida.setWinner(winner);
                        lista.add(partida);
		}
		
		
		this.closeConnection();
		
		return lista;
            
            
	}

}
